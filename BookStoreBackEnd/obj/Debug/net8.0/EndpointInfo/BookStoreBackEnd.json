{
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore API",
    "version": "v1"
  },
  "paths": {
    "/Address": {
      "post": {
        "tags": [
          "Address"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Address"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Address/get/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Address/user/{userId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/adminuser": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Registers a new admin user in the system.",
        "requestBody": {
          "description": "Admin user registration details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/adminuser/login": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Authenticates an admin user and returns a JWT token.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Admin email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Admin password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/adminuser/forget-password": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Sends an OTP to the admin's registered email for password reset.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Admin user's email address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/adminuser/reset-password": {
      "post": {
        "tags": [
          "AdminUser"
        ],
        "summary": "Resets admin password using the OTP sent to email.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Admin user's email address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otp",
            "in": "query",
            "description": "One-time password",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "query",
            "description": "New password to be set",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieves all books.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookIEnumerableResponseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookIEnumerableResponseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookIEnumerableResponseModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Adds a new book. Only accessible by Admin.",
        "requestBody": {
          "description": "The book data to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Retrieves a specific book by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Book ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Deletes a book by ID. Only accessible by Admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the book to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponseModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponseModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Adds a book to the user's shopping cart",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "description": "ID of the book to add",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Retrieves all items in the user's shopping cart",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Updates quantity or purchase status of a cart item",
        "requestBody": {
          "description": "Model containing book ID, quantity, and purchase status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Removes a book from the user's shopping cart",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "description": "ID of the book to remove",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Registers a new user account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authenticates a user and generates an access token",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/forget-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Initiates password reset process by sending OTP to user's email",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Resets user password using the OTP received via email",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/wishlist": {
      "get": {
        "tags": [
          "WishList"
        ],
        "summary": "Retrieves the wishlist items for the logged-in user.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "WishList"
        ],
        "summary": "Adds a book to the wishlist for the logged-in user.",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "WishList"
        ],
        "summary": "Removes a book from the wishlist of the logged-in user.",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/wishlist/move-to-cart": {
      "post": {
        "tags": [
          "WishList"
        ],
        "summary": "Moves a book from the wishlist to the cart.",
        "parameters": [
          {
            "name": "bookId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressInputModel": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "pinCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Book": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int32"
          },
          "bookName": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountPrice": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "bookImage": {
            "type": "string",
            "nullable": true
          },
          "adminUserId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookIEnumerableResponseModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Book"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookInputModel": {
        "required": [
          "author",
          "bookName",
          "discountPrice",
          "price",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "bookName": {
            "minLength": 1,
            "type": "string"
          },
          "author": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountPrice": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "bookImage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookResponseModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Book"
          }
        },
        "additionalProperties": false
      },
      "InputModel": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringResponseModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCartItemModel": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "isPurchased": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter 'Bearer {your JWT token}'",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}